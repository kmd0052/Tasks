Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit)<- 1:6
Simulation3 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit)<- 1:6
Simulation4 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit<- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit)<- 1:6
Simulation6<- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
mtext(side=2, at=8, line=0, "sel.sim")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
#questions:
#x^2=10
#x^2=85
#the bars are not even when it is high
#the bars are pretty even when it is low
#pretty similar in my opinion
#chi-squared differs by the background
#yes it could be the reasoning
#no
install.packages(&quot;learnPopGen&quot;)
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model&lt;- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
for (locus in 1:Nloci) {
ntrees &lt;- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy &lt;- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy,
read.tree(text=stats$trees[[locus]][n]))
}
par(mfrow=c(1,1))
densityTree(outPhy)
par (mfrow=c(1, 1))
densityTree(outPhy)
install.packages("learnPopGen";)
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
ntrees &lt;- length(stats$trees[[locus]])
ntrees <- length(stats$trees[[locus]])
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2<- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
for (locus in 1:Nloci) {
ntrees <- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus]][n]))
}
par(mfrow=c(1,1))
densityTree(outPhy)
model3 <- coal_model(10, 50) +
feat_mutation(par_prior("theta", sample.int(100, 1))) +
sumstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta<- sapply(stats, function(x) x$pars [["theta"]])
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
axisPhylo ()
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
t1 <- read.tree(text=stats$trees[[1]][1])
t1<- read.tree(text=stats$trees [[1]][1])
setwd("~/Desktop/Evolution/Project")
setwd(''~/Desktop/Evolution/Tasks/Project')
setwd('~/Desktop/Evolution/Tasks/Project')
setwd(''~/Desktop/Evolution/Tasks/Project")
setwd(""~/Desktop/Evolution/Tasks/Project")
setwd("~/Desktop/Evolution/Tasks/Project")
setwd("~/Desktop/Evolution/Project")
setwd('~/Desktop/Evolution/Task/Project')
setwd("~/Desktop/Evolution/Task/Project")
setwd("~/Desktop/Evolution/Project")
setwd('~/Desktop/Evolution/Project')
source ("http://jonsmitchell.com/code/reformatData07.r")
set(wd)
source ("http://jonsmitchell.com/code/reformatData07.r")
source ("http://jonsmithcell.com/code/simFxn.r")
setwd("~/Desktop/Evolution/Tasks/task_6")
source ("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot (1, 1, type="n", xlim=c (1998, 2013), ylim=c(0, 1))
s <- apply (overallFreq, 2, function(x) lines (overallFreq [,1], x, col= rgb(0, 0, 0, 0.01)))
plot (1, 1, type="n", xlim=c (1998, 2013), ylim=c(0, 1))
plot (1, 1, type="n", xlim=c (1998, 2013), ylim=c(0, 1))#
s <- apply (overallFreq, 2, function(x) lines (overallFreq [,1], x, col= rgb(0, 0, 0, 0.01)))
rescaleFreq <- apply(overallFreq [,3:ncol(overallFreq)], 2, function(x) x-x[1])
plot(1, 1, type= "n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq , 2, function(x) lines(overallFReq[,1], x, col=rgb(0, 0, 0, 0.01)))
s <- apply(rescaleFreq , 2, function(x) lines(overallFreq[,1], x, col=rgb(0, 0, 0, 0.01)))
dYear <-c()
dAlleles <<- c()
for (i in 3:ncol(overallFreq))  {
dYear <- c(dYear, overallFreq[,1])
Vec <- overallFreq [,i]
Init <- overallFreq [1,i]
dAlleles <- c(dAlleles, Vec - Init)
}
smoothScatter(dYear, dAlleles, colramp= Pal, nbin=100)
smoothScatter(dYear dAlleles, colramp= Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
smoothScatter(dYear dAlleles, colramp= Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
smoothScatter (dYear dAlleles, colramp= Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
smoothScatter (dYear, dAlleles, colramp= Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns = 50, n= 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = TRUE)
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, allleFreqs$d_surv, col='red')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
