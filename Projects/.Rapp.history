sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
for (locus in 1:Nloci) {
ntrees &lt;- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy &lt;- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy,
read.tree(text=stats$trees[[locus]][n]))
}
par(mfrow=c(1,1))
densityTree(outPhy)
par (mfrow=c(1, 1))
densityTree(outPhy)
install.packages("learnPopGen";)
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
ntrees &lt;- length(stats$trees[[locus]])
ntrees <- length(stats$trees[[locus]])
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Age1 <- max(nodeHeights(t1))
t2<- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
axisPhylo()
plot(t2)
axisPhylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees [[1]][1])
t1_2 <- read.tree(text=stats$trees [[1]][2])
compare.chronograms(t1_1, t1_2)
for (locus in 1:Nloci) {
ntrees <- length(stats$trees[[locus]])
for (n in 1:ntrees) {
if (locus == 1 && n == 1) {
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus]][n]))
}
par(mfrow=c(1,1))
densityTree(outPhy)
model3 <- coal_model(10, 50) +
feat_mutation(par_prior("theta", sample.int(100, 1))) +
sumstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x) mean(x$pi))
theta<- sapply(stats, function(x) x$pars [["theta"]])
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
library("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
axisPhylo ()
install.packages("learnPopGen")
library("learnPopGen")
install.packages("coala")
library("coala")
install.packages("phytools")
model<- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats<- simulate(model, nsim = 1)
Diversity<- stats$pi
Nloci<- length(stats$trees)
t1<- read.tree(text=stats$trees[[1]][1])
t1 <- read.tree(text=stats$trees[[1]][1])
t1<- read.tree(text=stats$trees [[1]][1])
setwd("~/Desktop/Evolution/Project")
setwd(''~/Desktop/Evolution/Tasks/Project')
setwd('~/Desktop/Evolution/Tasks/Project')
setwd(''~/Desktop/Evolution/Tasks/Project")
setwd(""~/Desktop/Evolution/Tasks/Project")
setwd("~/Desktop/Evolution/Tasks/Project")
setwd("~/Desktop/Evolution/Project")
setwd('~/Desktop/Evolution/Task/Project')
setwd("~/Desktop/Evolution/Task/Project")
setwd("~/Desktop/Evolution/Project")
setwd('~/Desktop/Evolution/Project')
source ("http://jonsmitchell.com/code/reformatData07.r")
set(wd)
source ("http://jonsmitchell.com/code/reformatData07.r")
source ("http://jonsmithcell.com/code/simFxn.r")
text.string<-
"(((((((cow, pig) , whale) , (bat, (lemur, human))) ,(robin, iguana)) , coelacanth) ,(gold_fish, trout)) , shark) ;"
vert.tree<-read,tree(text=text.string)
vert. tree<-read.tree(text=text.string)
vert.tree<-read.tree(text=text.string)
vert.tree<- read.tree(text=text.string)
v e r t . t r e e<−read . t r e e ( text=text . s t r i n g )
vert.tree<−read . tree ( text=text . string )
vert.tree <−read . tree ( text=text . string )
vert.tree<−read . tree ( text=text . string )
vert.tree<-read.tree(text=text.string)
setwd(~/Desktop/Evolution/Tasks/task_07)
text.string<-
"(((((((cow, pig) , whale) ,(bat, (lemur, human))) , (robin, iguana)) , coelacanth) , (gold_fish, trout)) ,shark) ;"
vert.tree<-read.tree(text=text.string)
"(((((((cow, pig) , whale) ,(bat, (lemur, human))) , (robin, iguana)) , coelacanth) , (gold_fish, trout)) ,shark) ;" vert.tree<-read.tree(text=text.string)
vert.tree<-read.tree(text=text. string)
vert.tree<-read . tree(text=text.string)
vert.tree<- read . tree(text=text.string)
vert.tree<-read.tree( text=text.string)
vert.tree<-read.tree (text=text.string)
text.string<-
"(((((((cow, pig) ,whale) , (bat, (lemur, human))) , (robin, iguana)) , coelacanth) , (gold_fish, trout)) , shark) ;"
vert.tree<-read.tree(text==.string)
vert.tree<-read.tree(text==text.string)
install.packages
library
libraryvert.tree<-read.tree(text=text.string)
vert.tree<-read.tree(text=text.string)
setwd("~/Desktop/Evolution/Tasks/Projects")
karell <- read.csv("karell_data.csv")
par(las=1, mgp=c(2.5, 0.25, 0), tck=-0.01)
plot(karell$Parasite.intensity, karell$TL, xlab="parasite intensity (% infected red blood cells)", ylab="telomere length (T/S ratio)")
siskin <- read.csv("siskin.csv")
head(siskin)
plot(siskin$X..parasitemia~siskin$TL.Telomere.length., boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
FitRegression <-lm(y-x)
setwd("~/Desktop/Evolution/Tasks/Projects")
karell <- read.csv("karell_data.csv")
par(las=1, mgp=c(2.5, 0.25, 0), tck=-0.01)
karell <- read.csv("~/Desktop/Evolution/Tasks/karell_data.csv")
par(las=1, mgp=c(2.5, 0.25, 0), tck=-0.01)
plot(karell$Parasite.intensity, karell$TL, xlab="parasite intensity (% infected red blood cells)", ylab="telomere length (T/S ratio)")
siskin <- read.csv("siskin.csv")
head(siskin)
boxplot(karell$TL ~ karell$Age.class, boxwex=0.25, xlab="age class (years)", ylab="telomere length (T/S ratio)")
plot(siskin$X..parasitemia~siskin$TL.Telomere.length., boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
FitRegression <-lm(y-x)
FitRegression <-lm(y-x)
plot(siskin$X..parasitemia~siskin$TL.Telomere.length., boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
abline(FitRegression)
abline(FitRegression, col="red", lty=2, lwd=2)
FitRegression
lm(parasitemia ~ Telomere length)
abline(lm(parasitemia ~ Telomere length))
abline(lm(parasitemia~Telomere length))
plot(siskin$X..parasitemia~siskin$TL.Telomere.length.,abline(lm(x-y)), boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
plot(siskin$X..parasitemia~siskin$TL.Telomere.length.,abline(lm(parasitemia-telomere length)), boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
plot(siskin$X..parasitemia~siskin$TL.Telomere.length.,abline(lm(parasitemia-telomere length(T/S ration)), boxwex=0.25, xlab="parasitemia", ylab="Telomere length (T/S ratio)")
plot(siskin$BM..Body.mass.~siskin$TL.Telomere.length., boxwex=0.25, xlab="Body mass", ylab="Telomere length (T/S ratio)")
plot(siskin$BM..Body.mass.~siskin$TL.Telomere.length., boxwex=0.25, xlab="Body mass", ylab="Telomere length (T/S ratio)")
karell_data <- read.csv ("~/Desktop/Evolution/Tasks/karell_data.csv")
karell <- read.csv("~/Desktop/Evolution/Tasks/karell_data.csv")
FitRegression <- lm(y~x)
FitRegression <- lm(y ~ x)
FitRegression <- lm(body mass~ telomere length)
FitRegression <- lm(body mass ~ telomere length)
FitRegression <- lm( body mass ~ telomere length)
FitRegression <- lm ( body mass ~ telomere length)
FitRegression <- lm (body mass ~ telomere length)
